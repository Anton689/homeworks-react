{"version":3,"sources":["p2-homeworks/h1/Message.tsx","p2-homeworks/h1/HW1.tsx","p2-homeworks/h2/Affair.tsx","p2-homeworks/h2/Affairs.tsx","p2-homeworks/h2/HW2.tsx","p2-homeworks/h3/Greeting.tsx","p2-homeworks/h3/GreetingContainer.tsx","p2-homeworks/h3/HW3.tsx","p1-main/m1-ui/u1-app/App.tsx","serviceWorker.ts","index.tsx","p2-homeworks/h1/Message.module.css","p1-main/m1-ui/u1-app/App.module.css","p2-homeworks/h3/Greeting.module.css"],"names":["Message","props","className","s","dialogWindow","src","avatar","alt","div","message","name","text","time","messageData","HW1","Affair","affair","priority","onClick","deleteAffairCallback","_id","Affairs","mappedAffairs","data","map","a","setFilter","defaultAffairs","HW2","useState","affairs","setAffairs","filter","filteredAffairs","filterAffairs","deleteAffair","Greeting","setNameCallback","addUser","error","totalUsers","onPressKeyHandler","onFocusHandler","button","inputClass","value","onChange","onKeyPress","onFocus","disabled","GreetingContainer","users","addUserCallback","setName","setError","setButton","trim","parseInt","alert","length","e","currentTarget","key","HW3","setUsers","newUsers","v1","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","module","exports"],"mappings":"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","file":"static/js/main.319bfa8c.chunk.js","sourcesContent":["import React from 'react'\r\nimport s from './Message.module.css';\r\n\r\ntype propsType = {\r\n    avatar: string;\r\n    name: string;\r\n    text: string;\r\n    time: string;\r\n}\r\n\r\nfunction Message(props: propsType) {\r\n    return (\r\n        <div className={s.dialogWindow}>\r\n            <img src={props.avatar} alt=\"\" className={s.avatar}/>\r\n            <div className={s.div}></div>\r\n            <div className={s.message}>\r\n                <div className={s.name}>\r\n                    {props.name}\r\n                </div>\r\n                <div className={s.text}>\r\n                    {props.text}\r\n                </div>\r\n                <div className={s.time}>\r\n                    {props.time}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import React from 'react'\r\nimport Message from \"./Message\";\r\n\r\ntype MessageDataType = {\r\n    avatar: string;\r\n    name: string;\r\n    message: string;\r\n    time: string;\r\n}\r\n\r\nconst messageData: MessageDataType = {\r\n    avatar: 'https://sun9-74.userapi.com/Ph-WiuOtF985il9AvN9JqiCWedmHtSGSSTXrSA/ltEB2Z2-YO4.jpg',\r\n    name: 'Anton',\r\n    message: 'Hello!',\r\n    time: '22:00',\r\n}\r\n\r\n\r\nfunction HW1() {\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 1\r\n            {/*should work (должно работать)*/}\r\n            <Message avatar={messageData.avatar}\r\n                     name={messageData.name}\r\n                     text={messageData.message}\r\n                     time={messageData.time}/>\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeMessage/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW1\r\n","import React from 'react'\r\nimport {AffairType} from './HW2';\r\nimport affairs from './Affairs';\r\nimport Affairs from './Affairs';\r\n\r\ntype AffairPropsType = {\r\n    // key не нужно типизировать\r\n    affair: AffairType; // need to fix any\r\n    deleteAffairCallback: (_id: number) => void // need to fix any\r\n}\r\n\r\nfunction Affair(props: AffairPropsType) {\r\n    const deleteCallback = () => {\r\n        props.deleteAffairCallback(props.affair._id);\r\n    }// need to fix\r\n\r\n    return (\r\n        <div>\r\n            <span>{props.affair.name}</span>\r\n            <span>{props.affair.priority}</span>\r\n\r\n            <button onClick={deleteCallback}>X</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affair\r\n","import React from 'react'\r\nimport Affair from './Affair'\r\nimport {AffairType, deleteAffair, FilterType} from './HW2'\r\n\r\ntype AffairsPropsType = { // need to fix any\r\n    data: Array<AffairType>;\r\n    setFilter: (filter: FilterType) => void;\r\n    deleteAffairCallback: (_id: number) => void;\r\n}\r\n\r\nfunction Affairs(props: AffairsPropsType) {\r\n    const mappedAffairs = props.data.map((a: AffairType) => (\r\n        <Affair // should work\r\n            key={a._id} // кеи ОБЯЗАТЕЛЬНЫ в 99% - так что лучше их писать всегда при создании компонент в мапе\r\n            affair={a}\r\n            deleteAffairCallback={props.deleteAffairCallback}\r\n        />\r\n    ))\r\n\r\n    const setAll = () => {\r\n        props.setFilter('all')\r\n    } // need to fix\r\n    const setHigh = () => {\r\n        props.setFilter('high')\r\n    }\r\n    const setMiddle = () => {\r\n        props.setFilter('middle')\r\n    }\r\n    const setLow = () => {\r\n        props.setFilter('low')\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            {mappedAffairs}\r\n\r\n            <button onClick={setAll}>All</button>\r\n            <button onClick={setHigh}>High</button>\r\n            <button onClick={setMiddle}>Middle</button>\r\n            <button onClick={setLow}>Low</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Affairs\r\n","import React, {useState} from 'react'\r\nimport Affairs from './Affairs'\r\n\r\n// types\r\n\r\nexport type AffairPriorityType = 'high' | 'low' | 'middle'; // need to fix any\r\nexport type AffairType = {\r\n    _id: number;\r\n    name: string;\r\n    priority: AffairPriorityType;\r\n} // need to fix any\r\nexport type FilterType = 'all' | AffairPriorityType;\r\n\r\n// constants\r\nconst defaultAffairs: Array<AffairType> = [ // need to fix any\r\n    {_id: 1, name: 'React', priority: 'high'},\r\n    {_id: 2, name: 'anime', priority: 'low'},\r\n    {_id: 3, name: 'games', priority: 'low'},\r\n    {_id: 4, name: 'work', priority: 'high'},\r\n    {_id: 5, name: 'html & css', priority: 'middle'},\r\n]\r\n\r\n// pure helper functions\r\nexport const filterAffairs = (affairs: Array<AffairType>, filter: FilterType): Array<AffairType> => { // need to fix any\r\n    if (filter === 'all') return affairs\r\n    if (filter === 'low') return affairs.filter((affair) => affair.priority === 'low')\r\n    if (filter === 'high') return affairs.filter((affair) => affair.priority === 'high')\r\n    if (filter === 'middle') return affairs.filter((affair) => affair.priority === 'middle')\r\n\r\n    else return affairs// need to fix\r\n}\r\nexport const deleteAffair = (affairs: Array<AffairType>, _id: number): Array<AffairType> => { // need to fix any\r\n    return affairs.filter(a => a._id !== _id)// need to fix\r\n}\r\n\r\nfunction HW2() {\r\n    const [affairs, setAffairs] = useState<Array<AffairType>>(defaultAffairs) // need to fix any\r\n    const [filter, setFilter] = useState<FilterType>('all')\r\n\r\n    const filteredAffairs = filterAffairs(affairs, filter)\r\n    const deleteAffairCallback = (_id: number) => setAffairs(deleteAffair(affairs, _id))\r\n    // need to fix any\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 2\r\n\r\n            {/*should work (должно работать)*/}\r\n            <Affairs\r\n                data={filteredAffairs}\r\n                setFilter={setFilter}\r\n                deleteAffairCallback={deleteAffairCallback}\r\n            />\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeAffairs/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW2\r\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\r\nimport s from './Greeting.module.css'\r\n\r\ntype GreetingPropsType = {\r\n    name: string // need to fix any\r\n    setNameCallback: (e: ChangeEvent<HTMLInputElement>) => void // need to fix any\r\n    addUser: () => void // need to fix any\r\n    error: string // need to fix any\r\n    totalUsers: number // need to fix any\r\n    onPressKeyHandler: (e:KeyboardEvent<HTMLInputElement>) => void;\r\n    onFocusHandler: (e:DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>) => void;\r\n    button: boolean;\r\n}\r\n\r\n// презентационная компонента (для верстальщика)\r\nconst Greeting: React.FC<GreetingPropsType> = (\r\n    {name, setNameCallback, addUser, error, totalUsers,onPressKeyHandler, onFocusHandler, button} // деструктуризация пропсов\r\n) => {\r\n    const inputClass = s.error // need to fix with (?:) //верстка\r\n\r\n    return (\r\n        <div>\r\n            <input value={name} onChange={setNameCallback}  onKeyPress={onPressKeyHandler} onFocus={onFocusHandler} className={inputClass}/>\r\n            <span>{error}</span>\r\n            <button disabled={button} onClick={addUser}>add</button>\r\n            <span>{totalUsers}</span>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Greeting\r\n","import React, {ChangeEvent, useState, KeyboardEvent, InputHTMLAttributes, DetailedHTMLProps} from 'react'\r\nimport Greeting from './Greeting'\r\nimport {UserType} from './HW3';\r\nimport {type} from 'os';\r\n\r\ntype GreetingContainerPropsType = {\r\n    users: Array<UserType>; // need to fix any\r\n    addUserCallback: (name: string) => void; // need to fix any\r\n}\r\n\r\n// более простой и понятный для новичков\r\n// function GreetingContainer(props: GreetingPropsType) {\r\n\r\n// более современный и удобный для про :)\r\n// уровень локальной логики\r\nconst GreetingContainer: React.FC<GreetingContainerPropsType> = ({users, addUserCallback}) => { // деструктуризация пропсов\r\n\r\n    const [name, setName] = useState<string>('') // need to fix any\r\n    const [error, setError] = useState<string>('') // need to fix any\r\n    const [button, setButton] = useState(false);\r\n\r\n    const setNameCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setName(e.currentTarget.value)\r\n\r\n    }\r\n\r\n    const addUser = () => {\r\n        if (!name.trim() || parseInt(name)) {\r\n            setError('error');\r\n            setName('');\r\n            setButton(true);\r\n        } else {\r\n            //setButton(false);\r\n            setError('');\r\n            setName('');\r\n            alert(`Hello ${name} !`);\r\n            addUserCallback(name);\r\n            // need to fix\r\n        }\r\n    }\r\n\r\n    const onFocusHandler = (e: DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>) => {\r\n        setError('')\r\n        setButton(false)\r\n    }\r\n\r\n    const onPressKeyHandler = (e: KeyboardEvent<HTMLInputElement>) => {\r\n        if (e.key === 'Enter') {\r\n            addUser();\r\n        }\r\n    }\r\n\r\n\r\n    const totalUsers = users.length // need to fix\r\n\r\n    return (\r\n        <Greeting\r\n            name={name}\r\n            setNameCallback={setNameCallback}\r\n            addUser={addUser}\r\n            error={error}\r\n            totalUsers={totalUsers}\r\n            onPressKeyHandler={onPressKeyHandler}\r\n            onFocusHandler={onFocusHandler}\r\n            button={button}\r\n        />\r\n    )\r\n}\r\n\r\nexport default GreetingContainer\r\n","import React, {useState} from 'react'\r\nimport GreetingContainer from './GreetingContainer'\r\nimport {v1} from 'uuid';\r\n\r\n// types\r\nexport type UserType = {\r\n    _id: string; // need to fix any\r\n    name: string // need to fix any\r\n}\r\n\r\n// уровень работы с глобальными данными\r\nfunction HW3() {\r\n    const [users, setUsers] = useState<Array<UserType>>([]) // need to fix any\r\n\r\n    const addUserCallback = (name: string) => { // need to fix any\r\n        let newUsers = [{_id: v1(), name: name}, ...users];\r\n        setUsers(newUsers) // need to fix\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <hr/>\r\n            homeworks 3\r\n\r\n            {/*should work (должно работать)*/}\r\n            <GreetingContainer users={users} addUserCallback={addUserCallback}/>\r\n\r\n            <hr/>\r\n            {/*для личного творчества, могу проверить*/}\r\n            {/*<AlternativeGreeting/>*/}\r\n            <hr/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HW3\r\n","import React from 'react';\r\nimport s from './App.module.css';\r\nimport HW1 from '../../../p2-homeworks/h1/HW1';\r\nimport HW2 from '../../../p2-homeworks/h2/HW2';\r\nimport HW3 from '../../../p2-homeworks/h3/HW3';\r\n\r\nfunction App() {\r\n    return (\r\n        <div className={s.App}>\r\n            <div>react homeworks:</div>\r\n            <HW1/>\r\n            <HW2/>\r\n            <HW3/>\r\n            {/*<HW4/>*/}\r\n            {/*<HW5/>*/}\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default App\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\ntype Config = {\r\n    onSuccess?: (registration: ServiceWorkerRegistration) => void\r\n    onUpdate?: (registration: ServiceWorkerRegistration) => void\r\n}\r\n\r\nexport function register(config?: Config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n        // The URL constructor is available in all browsers that support SW.\r\n        const publicUrl = new URL(\r\n            process.env.PUBLIC_URL,\r\n            window.location.href\r\n        )\r\n        if (publicUrl.origin !== window.location.origin) {\r\n            // Our service worker won't work if PUBLIC_URL is on a different origin\r\n            // from what our page is served on. This might happen if a CDN is used to\r\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n            return\r\n        }\r\n\r\n        window.addEventListener('load', () => {\r\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n            if (isLocalhost) {\r\n                // This is running on localhost. Let's check if a service worker still exists or not.\r\n                checkValidServiceWorker(swUrl, config)\r\n\r\n                // Add some additional logging to localhost, pointing developers to the\r\n                // service worker/PWA documentation.\r\n                navigator.serviceWorker.ready.then(() => {\r\n                    console.log(\r\n                        'This web app is being served cache-first by a service ' +\r\n                        'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n                    )\r\n                })\r\n            } else {\r\n                // Is not localhost. Just register service worker\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n    navigator.serviceWorker\r\n        .register(swUrl)\r\n        .then(registration => {\r\n            registration.onupdatefound = () => {\r\n                const installingWorker = registration.installing\r\n                if (installingWorker == null) {\r\n                    return\r\n                }\r\n                installingWorker.onstatechange = () => {\r\n                    if (installingWorker.state === 'installed') {\r\n                        if (navigator.serviceWorker.controller) {\r\n                            // At this point, the updated precached content has been fetched,\r\n                            // but the previous service worker will still serve the older\r\n                            // content until all client tabs are closed.\r\n                            console.log(\r\n                                'New content is available and will be used when all ' +\r\n                                'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                            )\r\n\r\n                            // Execute callback\r\n                            if (config && config.onUpdate) {\r\n                                config.onUpdate(registration)\r\n                            }\r\n                        } else {\r\n                            // At this point, everything has been precached.\r\n                            // It's the perfect time to display a\r\n                            // \"Content is cached for offline use.\" message.\r\n                            console.log('Content is cached for offline use.')\r\n\r\n                            // Execute callback\r\n                            if (config && config.onSuccess) {\r\n                                config.onSuccess(registration)\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        })\r\n        .catch(error => {\r\n            console.error('Error during service worker registration:', error)\r\n        });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n        headers: {'Service-Worker': 'script'}\r\n    })\r\n        .then(response => {\r\n            // Ensure service worker exists, and that we really are getting a JS file.\r\n            const contentType = response.headers.get('content-type')\r\n            if (\r\n                response.status === 404 ||\r\n                (contentType != null && contentType.indexOf('javascript') === -1)\r\n            ) {\r\n                // No service worker found. Probably a different app. Reload the page.\r\n                navigator.serviceWorker.ready.then(registration => {\r\n                    registration.unregister().then(() => {\r\n                        window.location.reload()\r\n                    })\r\n                })\r\n            } else {\r\n                // Service worker found. Proceed as normal.\r\n                registerValidSW(swUrl, config)\r\n            }\r\n        })\r\n        .catch(() => {\r\n            console.log(\r\n                'No internet connection found. App is running in offline mode.'\r\n            )\r\n        })\r\n}\r\n\r\nexport function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n        navigator.serviceWorker.ready\r\n            .then(registration => {\r\n                registration.unregister()\r\n            })\r\n            .catch(error => {\r\n                console.error(error.message)\r\n            })\r\n    }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport './index.css'\r\nimport App from './p1-main/m1-ui/u1-app/App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App/>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogWindow\":\"Message_dialogWindow__26zmF\",\"avatar\":\"Message_avatar__37RdB\",\"message\":\"Message_message__2_qKe\",\"div\":\"Message_div__1uGLG\",\"name\":\"Message_name__3-Ild\",\"text\":\"Message_text__3jlhS\",\"time\":\"Message_time__3RhDc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__32irB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"someClass\":\"Greeting_someClass__3T5uU\",\"error\":\"Greeting_error__1UeLh\"};"],"sourceRoot":""}